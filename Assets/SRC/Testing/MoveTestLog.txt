->a2a3: 380 a2a3: 380
->a2a4: 420 a2a4: 420
->b1a3: 400 b1a3: 400
->b1c3: 440 b1c3: 440
->b2b3: 420 b2b3: 420
->b2b4: 421 b2b4: 421
->c2c3: 420 c2c3: 420
->c2c4: 441 c2c4: 441
->d2d3: 539 d2d3: 539
->d2d4: 560 d2d4: 560
->e2e3: 599 e2e3: 599
->e2e4: 600 e2e4: 600
->f2f3: 380 f2f3: 380
->f2f4: 401 f2f4: 401
->g1f3: 440 g1f3: 440
->g1h3: 400 g1h3: 400
->g2g3: 420 g2g3: 420
->g2g4: 421 g2g4: 421
->h2h3: 380 h2h3: 380
##*
->h2h4: 421 h2h4: 420
*##


//Stockfish
Checkers:
go perft 3
a2a3: 380
b2b3: 420
c2c3: 420
d2d3: 539
e2e3: 599
f2f3: 380
g2g3: 420
h2h3: 380
a2a4: 420
b2b4: 421
c2c4: 441
d2d4: 560
e2e4: 600
f2f4: 401
g2g4: 421
h2h4: 420
b1a3: 400
b1c3: 440
g1f3: 440
g1h3: 400

Nodes searched: 8902


go perft 4
a2a3: 8457
b2b3: 9345
c2c3: 9272
d2d3: 11959
e2e3: 13134
f2f3: 8457
g2g3: 9345
h2h3: 8457
a2a4: 9329
b2b4: 9332
c2c4: 9744
d2d4: 12435
e2e4: 13160
f2f4: 8929
g2g4: 9328
h2h4: 9329
b1a3: 8885
b1c3: 9755
g1f3: 9748
g1h3: 8881

Nodes searched: 197281






a2a3: 1
b2b3: 1
c2c3: 1
d2d3: 1
e2e3: 1
f2f3: 1
g2g3: 1
h2h3: 1
a2a4: 1
b2b4: 1
c2c4: 1
d2d4: 1
e2e4: 1
f2f4: 1
g2g4: 1
h2h4: 1
b1a3: 1
b1c3: 1
g1f3: 1
g1h3: 1

a2a3: g8h6->a1b1: LEAF


b2b3: g8h6->g1f3: LEAF    
c2c3: g8h6->g1h3: LEAF    
d2d3: g8h6->b2b3: LEAF    
e2e3: g8h6->b2b4: LEAF    
f2f3: g8h6->c2c3: LEAF    
g2g3: g8h6->c2c4: LEAF    
h2h3: g8h6->d2d3: LEAF    
a2a4: g8h6->d2d4: LEAF    
b2b4: g8h6->e2e3: LEAF    
c2c4: g8h6->e2e4: LEAF    
d2d4: g8h6->f2f3: LEAF    
e2e4: g8h6->f2f4: LEAF    
f2f4: g8h6->g2g3: LEAF    
g2g4: g8h6->g2g4: LEAF    
h2h4: g8h6->h2h3: LEAF    
b1a3: g8h6->h2h4: LEAF    
b1c3: g8h6->a3b5: LEAF    
g1f3: g8h6->a3b1: LEAF    
g1h3: g8h6->a3c4: LEAF    
a7a6: 1
b7b6: 1
c7c6: 1
d7d6: 1
e7e6: 1
f7f6: 1
g7g6: 1
h7h6: 1
a7a5: 1
b7b5: 1
c7c5: 1
d7d5: 1
e7e5: 1
f7f5: 1
g7g5: 1
h7h5: 1
b8a6: 1
b8c6: 1
g8f6: 1
g8h6: 1

#*-> a7a5:    ,a7a5:{22, 21}*#
  -> a7a6:    ,a7a6:{21, 21} 
  -> b7b5:    ,b7b5:{21, 21} 
  -> b7b6:    ,b7b6:{21, 21} 
  -> b8a6:    ,b8a6:{21, 21} 
  -> b8c6:    ,b8c6:{21, 21} 
  -> c7c5:    ,c7c5:{21, 21} 
  -> c7c6:    ,c7c6:{21, 21} 
  -> d7d5:    ,d7d5:{21, 21} 
  -> d7d6:    ,d7d6:{21, 21} 
  -> e7e5:    ,e7e5:{21, 21} 
  -> e7e6:    ,e7e6:{21, 21} 
  -> f7f5:    ,f7f5:{21, 21} 
  -> f7f6:    ,f7f6:{21, 21} 
  -> g7g5:    ,g7g5:{22, 22} 
  -> g7g6:    ,g7g6:{21, 21} 
  -> g8f6:    ,g8f6:{21, 21} 
  -> g8h6:    ,g8h6:{21, 21} 
  -> h7h5:    ,h7h5:{20, 20} 
  -> h7h6:    ,h7h6:{21, 21} 







     -> a7a5->b1a3: LEAF
	 -> a7a5->b1c3: LEAF
	 -> a7a5->g1f3: LEAF
	 -> a7a5->g1h3: LEAF
	 -> a7a5->h1h2: LEAF
	 -> a7a5->h1h3: LEAF
	 -> a7a5->a2a3: LEAF
	 -> a7a5->a2a4: LEAF
	 -> a7a5->b2b3: LEAF
	 -> a7a5->b2b4: LEAF
	 -> a7a5->c2c3: LEAF
	 -> a7a5->c2c4: LEAF
	 -> a7a5->d2d3: LEAF
	 -> a7a5->d2d4: LEAF
	 -> a7a5->e2e3: LEAF
	 -> a7a5->e2e4: LEAF
	 -> a7a5->f2f3: LEAF
	 -> a7a5->f2f4: LEAF
	 -> a7a5->g2g3: LEAF
	 -> a7a5->g2g4: LEAF
	 -> a7a5->h4h5: LEAF
	 -> a7a5->h4a6: LEAF
//SLOW

 public static void standardMoveTestRecursive(Board board, int currentPly, int plyDepth, long[] nMoves, string move, List<string> outputList, bool listMoves)
    {
        nMoves[currentPly] += board.Moves.Count;
        long before = 0;
        if (currentPly == plyDepth - 1)
        {
            if (listMoves)
            {
                foreach (Move nextMove in board.Moves)
                {
                    writeLeafNodesSync(move + "->" + MoveStringRepresentation(nextMove));
                }
            }
            if (currentPly == 1)
            {
                writeResultSync(board.Moves.Count, move, outputList);
            }
            return;
        }
        else
        {
            for (int i = currentPly; i < plyDepth; i++)
            {
                before += nMoves[i];
            }
        }
        foreach (Move nextMove in board.Moves)
        {
            Board newBoard = board.Clone();
            newBoard.useMove(nextMove);

            standardMoveTestRecursive(newBoard, currentPly + 1, plyDepth, nMoves, move + " -> " + MoveStringRepresentation(nextMove), outputList, listMoves);

        }
        if (currentPly == 1)
            leafListCounter++;
        long delta = 0;
        for (int i = currentPly; i < plyDepth; i++)
        {
            delta += nMoves[i];
        }
        delta -= before;
        if (currentPly != 0)
            writeResultSync(delta, move, outputList);

    }

"a2a3: 8457",
"b2b3: 9345",
"c2c3: 9272",
"d2d3: 11959",
"e2e3: 13134",
"f2f3: 8457",
"g2g3: 9345",
"h2h3: 8457",
"a2a4: 9329",
"b2b4: 9332",
"c2c4: 9744",
"d2d4: 12435",
"e2e4: 13160",
"f2f4: 8929",
"g2g4: 9328",
"h2h4: 9329",
"b1a3: 8885",
"b1c3: 9755",
"g1f3: 9748",
"g1h3: 8881"





//Ply 4
       -> a2a3: 8398	,a7a5: 21
  -> a2a4: 8873	,a7a6: 21
  -> b1a3: 8846	,b7b5: 21
  -> b1c3: 9756,b7b6: 21
  -> b2b3: 9326,b8a6: 21
  -> b2b4: 9315,b8c6: 21
  -> c2c3: 9763,c7c5: 21
  -> c2c4: 10257,c7c6: 21
  -> d2d3: 12498,d7d5: 21
  -> d2d4: 12995,d7d6: 21
  -> e2e3: 13871,e7e5: 21
  -> e2e4: 13900,e7e6: 21
  -> f2f3: 8837,f7f5: 21
  -> f2f4: 9330,f7f6: 21
  -> g1f3: 10188,g7g5: 22
  -> g1h3: 9281,g7g6: 21
  -> g2g3: 9765,g8f6: 21
  -> g2g4: 9749,g8h6: 21
  -> h2h3: 8837,h7h5: 20
  -> h2h4: 9749,h7h6: 21






  -> a2a3: 8398,a2a3: 8457
  -> a2a4: 8873,a2a4: 9329
  -> b1a3: 8846,b1a3: 8885
  -> b1c3: 9756,b1c3: 9755
  -> b2b3: 9326,b2b3: 9345
  -> b2b4: 9315,b2b4: 9332
  -> c2c3: 9763,c2c3: 9272
  -> c2c4: 10257,c2c4: 9744
  -> d2d3: 12498,d2d3: 11959
  -> d2d4: 12995,d2d4: 12435
  -> e2e3: 13871,e2e3: 13134
  -> e2e4: 13900,e2e4: 13160
  -> f2f3: 8837,f2f3: 8457
  -> f2f4: 9330,f2f4: 8929
  -> g1f3: 10188,g1f3: 9748
  -> g1h3: 9281,g1h3: 8881
  -> g2g3: 9765,g2g3: 9345
  -> g2g4: 9749,g2g4: 9328
  -> h2h3: 8837,h2h3: 8457
  -> h2h4: 9749,h2h4: 9329


"a7a6: 361",
"b7b6: 399",
"c7c6: 399",
"d7d6: 512",
"e7e6: 569",
"f7f6: 361",
"g7g6: 399",
"h7h6: 361",
"a7a5: 399",
"b7b5: 400",
"c7c5: 419",
"d7d5: 532",
"e7e5: 570",
"f7f5: 381",
"g7g5: 400",
"h7h5: 399",
"b8a6: 380",
"b8c6: 418",
"g8f6: 418",
"g8h6: 380"

  -> a7a5: 378,a7a5: 399
  -> a7a6: 342,a7a6: 361
  -> b7b5: 379,b7b5: 400
  -> b7b6: 378,b7b6: 399
  -> b8a6: 360,b8a6: 380
  -> b8c6: 396,b8c6: 418
  -> c7c5: 397,c7c5: 419
  -> c7c6: 378,c7c6: 399
  -> d7d5: 505,d7d5: 532
  -> d7d6: 486,d7d6: 512
  -> e7e5: 541,e7e5: 570
  -> e7e6: 540,e7e6: 569
  -> f7f5: 362,f7f5: 381
  -> f7f6: 343,f7f6: 361
  -> g7g5: 379,g7g5: 400
  -> g7g6: 378,g7g6: 399
  -> g8f6: 396,g8f6: 418
  -> g8h6: 360,g8h6: 380
  -> h7h5: 378,h7h5: 399
  -> h7h6: 342,h7h6: 361


"b2b3: 21",
"c2c3: 21",
"d2d3: 21",
"e2e3: 21",
"f2f3: 21",
"g2g3: 21",
"h2h3: 21",
"a3a4: 21",
"b2b4: 21",
"c2c4: 21",
"d2d4: 21",
"e2e4: 21",
"f2f4: 21",
"g2g4: 22",
"h2h4: 20",
"b1c3: 21",
"g1f3: 21",
"g1h3: 21",
"a1a2: 21"


  -> a1a2: 0,a1a2: 21
  -> a3a4: 21,a3a4: 21
  -> b1c3: 21,b1c3: 21
  -> b2b3: 21,b2b3: 21
  -> b2b4: 21,b2b4: 21
  -> c2c3: 21,c2c3: 21
  -> c2c4: 21,c2c4: 21
  -> d2d3: 21,d2d3: 21
  -> d2d4: 21,d2d4: 21
  -> e2e3: 21,e2e3: 21
  -> e2e4: 21,e2e4: 21
  -> f2f3: 21,f2f3: 21
  -> f2f4: 21,f2f4: 21
  -> g1f3: 21,g1f3: 21
  -> g1h3: 21,g1h3: 21
  -> g2g3: 21,g2g3: 21
  -> g2g4: 22,g2g4: 22
  -> h2h3: 21,h2h3: 21
  -> h2h4: 20,h2h4: 20


  a2a3->a7a5->a1a2



//ply5

"a2a3: 181046",
"b2b3: 215255",
"c2c3: 222861",
"d2d3: 328511",
"e2e3: 402988",
"f2f3: 178889",
"g2g3: 217210",
"h2h3: 181044",
"a2a4: 217832",
"b2b4: 216145",
"c2c4: 240082",
"d2d4: 361790",
"e2e4: 405385",
"f2f4: 198473",
"g2g4: 214048",
"h2h4: 218829",
"b1a3: 198572",
"b1c3: 234656",
"g1f3: 233491",
"g1h3: 198502"


  -> {a2a3,a2a3}: {189883 ,181046}
  -> {a2a4,a2a4}: {227581 ,217832}
  -> {b1a3,b1a3}: {207857 ,198572}
  -> {b1c3,b1c3}: {244851 ,234656}
  -> {b2b3,b2b3}: {225020 ,215255}
  -> {b2b4,b2b4}: {225898 ,216145}
  -> {c2c3,c2c3}: {232553 ,222861}
  -> {c2c4,c2c4}: {250267 ,240082}
  -> {d2d3,d2d3}: {341013 ,328511}
  -> {d2d4,d2d4}: {374789 ,361790}
  -> {e2e3,e2e3}: {416721 ,402988}
  -> {e2e4,e2e4}: {419145 ,405385}
  -> {f2f3,f2f3}: {187728 ,178889}
  -> {f2f4,f2f4}: {207805 ,198473}
  -> {g1f3,g1f3}: {243679 ,233491}
  -> {g1h3,g1h3}: {207783 ,198502}
  -> {g2g3,g2g3}: {226975 ,217210}
  -> {g2g4,g2g4}: {223797 ,214048}
  -> {h2h3,h2h3}: {189881 ,181044}
  -> {h2h4,h2h4}: {228578 ,218829}

"b2b3: 46",
"g2g3: 46",
"h2h3: 46",
"a3a4: 46",
"d3d4: 45",
"b2b4: 45",
"h2h4: 46",
"c3b1: 46",
"c3d1: 46",
"c3a2: 46",
"c3a4: 46",
"c3b5: 46",
"c3d5: 45",
"f3e1: 47",
"f3d2: 47",
"f3d4: 46",
"f3h4: 47",
"f3e5: 50",
"c4a2: 46",
"c4b3: 46",
"c4b5: 46",
"c4d5: 45",
"c4a6: 47",
"c4e6: 45",
"c4f7: 4",
"g5c1: 47",
"g5d2: 47",
"g5e3: 46",
"g5f4: 48",
"g5h4: 47",
"g5f6: 44",
"g5h6: 46",
"a1b1: 46",
"a1c1: 46",
"a1d1: 46",
"a1e1: 46",
"a1a2: 46",
"f1b1: 46",
"f1c1: 46",
"f1d1: 46",
"f1e1: 46",
"e2d1: 46",
"e2e1: 46",
"e2d2: 46",
"e2e3: 45",
"g1h1: 46"



  -> a1a2: 46,a1a2: 46
  -> a1b1: 46,a1b1: 46
  -> a1c1: 46,a1c1: 46
  -> a1d1: 46,a1d1: 46
  -> a1e1: 46,a1e1: 46
  -> a3a4: 46,a3a4: 46
  -> b2b3: 46,b2b3: 46
  -> b2b4: 45,b2b4: 45
  -> c3a2: 46,c3a2: 46
  -> c3a4: 46,c3a4: 46
  -> c3b1: 46,c3b1: 46
  -> c3b5: 46,c3b5: 46
  -> c3d1: 46,c3d1: 46
  -> c3d5: 45,c3d5: 45
  -> c4a2: 46,c4a2: 46
  -> c4a6: 47,c4a6: 47
  -> c4b3: 46,c4b3: 46
  -> c4b5: 46,c4b5: 46
  -> c4d5: 45,c4d5: 45
  -> c4e6: 45,c4e6: 45
  -> c4f7: 4,c4f7: 4
  -> d3d4: 45,d3d4: 45
  -> e2d1: 46,e2d1: 46
  -> e2d2: 46,e2d2: 46
  -> e2e1: 46,e2e1: 46
  -> e2e3: 45,e2e3: 45
  -> f1b1: 46,f1b1: 46
  -> f1c1: 46,f1c1: 46
  -> f1d1: 46,f1d1: 46
  -> f1e1: 46,f1e1: 46
  -> f3d2: 47,f3d2: 47
  -> f3d4: 46,f3d4: 46
  -> f3e1: 47,f3e1: 47
  -> f3e5: 50,f3e5: 50
  -> f3h4: 47,f3h4: 47
  -> g1h1: 46,g1h1: 46
  -> g2g3: 46,g2g3: 46
  -> g5c1: 47,g5c1: 47
  -> g5d2: 47,g5d2: 47
  -> g5e3: 46,g5e3: 46
  -> g5f4: 48,g5f4: 48
  -> g5f6: 44,g5f6: 44
  -> g5h4: 47,g5h4: 47
  -> g5h6: 46,g5h6: 46
  -> h2h3: 46,h2h3: 46
  -> h2h4: 46,h2h4: 46